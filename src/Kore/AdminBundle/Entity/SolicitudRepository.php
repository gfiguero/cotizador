<?php

namespace Kore\AdminBundle\Entity;

/**
 * SolicitudRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SolicitudRepository extends \Doctrine\ORM\EntityRepository
{
    public function findByRol($rol)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('s')
            ->from('KoreAdminBundle:Solicitud', 's')
            ->join('s.domicilio', 'sd')
            ->where('sd.rol = :rol')
            ->setParameter('rol', $rol);
        return $qb->getQuery()->getResult();
    }

    public function findByPersonaId($personaId)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('s')
            ->from('KoreAdminBundle:Solicitud', 's')
            ->join('s.persona', 'sp')
            ->where('sp.id = :id')
            ->setParameter('id', $personaId);
        return $qb->getQuery()->getResult();
    }

    public function findByRutaEstadoCodigo($codigo, $sort, $direction)
    {
        if(!$sort) $sort = 'id';
        if(!$direction) $direction = 'DESC';
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('s')
            ->from('KoreAdminBundle:Solicitud', 's')
            ->join('s.ruta', 'sr')
            ->join('sr.estado', 'sre')
            ->where('sre.codigo = :codigo')
            ->orderBy('s.'.$sort, $direction)
            ->setParameter('codigo', $codigo);
        return $qb->getQuery()->getResult();
    }

    public function findByRutaNull($sort, $direction)
    {
        if(!$sort) $sort = 'id';
        if(!$direction) $direction = 'DESC';
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('s')
            ->from('KoreAdminBundle:Solicitud', 's')
            ->where('s.ruta IS NULL')
            ->orderBy('s.'.$sort, $direction)
        ;
        return $qb->getQuery()->getResult();
    }

    public function count($days = null)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('count(s.id)')
            ->from('KoreAdminBundle:Solicitud', 's')
        ;
        if($days) {
            $date = new \DateTime('-'.$days.' days');
            $qb->where('s.created_at > :date')->setParameter('date', $date);
        }
        return $qb->getQuery()->getSingleScalarResult();
    }

    public function countByRutaNull()
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('count(s.id)')
            ->from('KoreAdminBundle:Solicitud', 's')
            ->where('s.ruta IS NULL')
        ;
        return $qb->getQuery()->getSingleScalarResult();
    }

    public function countByRutaEstadoCodigo($codigo)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('count(s.id)')
            ->from('KoreAdminBundle:Solicitud', 's')
            ->join('s.ruta', 'sr')
            ->join('sr.estado', 'sre')
            ->where('sre.codigo = :codigo')
            ->setParameter('codigo', $codigo);
        ;
        return $qb->getQuery()->getSingleScalarResult();
    }
}
